version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.5.0
jobs:
  build:
    # The "circle" directory contains the specs for this container
    docker:
      - image: circleci/python:3.6.4
        environment:
          ANALYTICA_UNDER_TEST: True
      - image: mdillon/postgis@sha256:f006ac612da048c54e49d7b2abd2862295070edcdd7d28efb24bccf859a87466
    steps:
      - checkout
      - run: echo 127.0.0.1 pg | sudo tee -a /etc/hosts
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run:
          name: Setting up pipenv
          command: sudo pip install pipenv
      - run:
          name: Installing dependencies
          command: pipenv install -r requirements.txt
      - run:
          name: Installing development dependencies
          command: pipenv install -r dev-requirements.txt
      - run:
          name: Running lint
          command: pipenv run flake8 datafeeds
      #- run:
      #    name: Running static analysis
      #    command: pipenv run mypy --ignore-missing-imports analytica
      - run:
          name: Running tests
          command: pipenv run python -m unittest -v

workflows:
  build-and-deploy:
    jobs:
      - build
      - aws-ecr/build-and-push-image:
          requires:
            - build
          extra-build-args: "--build-arg REPO_HOST=${AWS_DEV_ECR_ACCOUNT_URL}"
          attach-workspace: true
          account-url: AWS_DEV_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_DEV_ACCESS_KEY_ID
          aws-secret-access-key: AWS_DEV_SECRET_ACCESS_KEY
          #  context: myContext
          #  path: pathToMyDockerfile
          #  profile-name: myProfileName
          region: AWS_DEV_DEFAULT_REGION
          repo: $CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_SHA1
      - aws-ecr/build-and-push-image:
          requires:
            - build
          extra-build-args: "--build-arg REPO_HOST=${AWS_PROD_ECR_ACCOUNT_URL}"
          #attach-workspace: true
          account-url: AWS_PROD_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_PROD_ACCESS_KEY_ID
          aws-secret-access-key: AWS_PROD_SECRET_ACCESS_KEY
          #  context: myContext
          #  path: pathToMyDockerfile
          #  profile-name: myProfileName
          region: AWS_PROD_DEFAULT_REGION
          repo: $CIRCLE_PROJECT_REPONAME
          tag: $CIRCLE_SHA1

experimental:
  notify:
    branches:
      only:
        - master
