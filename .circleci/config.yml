version: 2.1
orbs:
  slack: circleci/slack@3.4.2
jobs:
  build:
    # The "circle" directory contains the specs for this container
    docker:
      - image: circleci/python:3.6.4
        environment:
          DATAFEEDS_UNDER_TEST: True
      - image: mdillon/postgis@sha256:f006ac612da048c54e49d7b2abd2862295070edcdd7d28efb24bccf859a87466
    steps:
      - checkout
      - run: echo 127.0.0.1 pg | sudo tee -a /etc/hosts
      - run:
          name: Bind AWS dev credentials for private fixtures to environment variables.
          command: |
            echo 'export AWS_ACCESS_KEY_ID=${AWS_DEV_ACCESS_KEY_ID}' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=${AWS_DEV_SECRET_ACCESS_KEY}' >> $BASH_ENV
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run:
          name: Setting up pipenv
          command: sudo pip install pipenv
      - run:
          name: Installing dependencies
          command: pipenv install -r requirements.txt
      - run:
          name: Installing development dependencies
          command: pipenv install -r dev-requirements.txt
      - run:
          name: Running Black (code formatting)
          command: pipenv run black --check .
      - run:
          name: Running lint
          command: pipenv run flake8 datafeeds ops launch.py
      - run:
          name: Running static analysis
          command: pipenv run mypy --no-strict-optional --ignore-missing-imports datafeeds launch.py
      - run:
          name: Running tests
          command: pipenv run python -m unittest -v
      - run:
          name: Running smoke test on launch.py
          command: pipenv run python launch.py --help
      - run: exit 0
      - slack/status:
          fail_only: false

workflows:
  build-and-deploy:
    jobs:
      - build
